# METADATA
# title: "Verify AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability"
# description: "This policy is designed to ensure the security and protection of Amazon Web Services (AWS) CloudFront distributions by verifying that the attached Web Application Firewall version 2 (WAFv2) WebACL is configured with appropriate rules to detect and mitigate the Log4j vulnerability (CVE-2021-44228)."
# scope: package
# related_resources:
# - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution
# custom:
#   id: CB_TFAWS_357
#   severity: MEDIUM
package lib.terraform.CB_TFAWS_357

isvalid(block) {
	block.Type == "resource"
	block.Labels[_] == "aws_cloudfront_distribution"
}

resource[resource] {
	block := pass[_]
	resource := concat(".", block.Labels)
}

resource[resource] {
	block := fail[_]
	resource := concat(".", block.Labels)
}

getWafv2Label[label] {
	resource := input[_]
	resource.Type == "resource"
	resource.Labels[_] == "aws_wafv2_web_acl"
	label := concat(".", resource.Labels)
}

isValidResourceAttached {
	block := input[_]
	block.Type == "resource"
	block.Labels[_] == "aws_wafv2_web_acl"
	block.Blocks[_].Blocks[_].Blocks[_].Type == "managed_rule_group_statement"
	contains(block.Blocks[_].Blocks[_].Blocks[_].Attributes.name, "AWSManagedRulesAnonymousIpList")
	contains(block.Blocks[_].Blocks[_].Blocks[_].Attributes.name, "AWSManagedRulesKnownBadInputsRuleSet")
}

pass[block] {
	block := input[_]
	isvalid(block)
	contains(block.Attributes.web_acl_id, getWafv2Label[_])
	isValidResourceAttached
}

fail[block] {
	block := input[_]
	isvalid(block)
	not pass[block]
}

passed[result] {
	block := pass[_]
	result := {
		"message": "AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability.",
		"snippet": block,
	}
}

failed[result] {
	block := fail[_]
	result := {
		"message": "AWS CloudFront attached WAFv2 WebACL is not configured with AMR for Log4j Vulnerability.",
		"snippet": block,
	}
}
